1. 使用数据模型带来的两个不稳定因素
1) 直接向前端返回数据模型, 会暴露系统的业务核心
2) 颗粒度太粗, 也就是出处数据无法精细调整

2. DTO 数据传输对象
1) Data Transfer Object
2) View Model 视图模型

3. Model 是用作处理业务逻辑的, 不能够用来做数据传递, 而 DTO 才是用做数据传递的

4. 流程中应用 table 将数据传递给 model, model 将有效数据传递给 dto, dto中, 仅保留了 model 的部分属性, 以此来确保数据的安全性

5. Model 是面向业务的, 需要通过业务来定义数据模型

6. DTO 是面向界面、面向UI的, DTO 的定义是按照 UI 的需求来个性化定制

7. 通过使用 DTO, 可以实现表现层与业务层的解耦, 因为表现层不使用 model, 而是将 model 映射给 dto

8. 因此, 业务改变, 只需要调整 model, 而界面改变, 只需要调整 dto

9. 通过使用 DTO, 上述两个不稳定因素都可以得到解决
1) 使用 DTO 的时候, 可以屏蔽我们不希望暴露的核心业务
2) 通过不同 DTO 的组合, 又可以调整输出数据的结果, 从而解决颗粒度太粗的问题

